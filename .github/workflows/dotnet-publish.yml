name: dotnet-build

on:
  workflow_call:
    inputs:
      build-artifacts:
        type: boolean
        required: true
        default: false

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]

    defaults:
      run:
        working-directory: ./src/service

    steps:
      - uses: actions/checkout@v3
        name: Checkout code

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'

      - name: Restore solution
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Test solution
        run: dotnet test --no-build --configuration Release --filter "FullyQualifiedName!~AcceptanceTests"

      - name: Publish website (win-x64)
        if: ${{ matrix.os == 'windows-latest' && inputs.build-artifacts == true }}
        run: |
          dotnet publish --configuration Release --runtime win-x64 --self-contained -p:DebugType=None -p:DebugSymbols=false -p:IncludeNativeLibrariesForSelfExtract=true --output ./publish/win-x64

      - name: Upload website artifacts (win-x64)
        if: ${{ matrix.os == 'windows-latest' && inputs.build-artifacts == true }}
        uses: actions/upload-artifact@v4
        with:
          name: service-x86_64-pc-windows-msvc
          path: ./src/service/publish/win-x64
          if-no-files-found: error

      - name: Publish website (linux-x64)
        if: ${{ matrix.os == 'ubuntu-latest' && inputs.build-artifacts == true }}
        run: |
          dotnet publish --configuration Release --runtime linux-x64 --self-contained -p:DebugType=None -p:DebugSymbols=false -p:IncludeNativeLibrariesForSelfExtract=true --output ./publish/linux-x64
        
      # A workaround for upstream issue: https://github.com/dotnet/runtime/issues/57784
      # dotnet is requiring an old version of liblttng which is no longer shipped in debian
      - name: Remove libcoreclrtraceptprovider.so workaround
        if:  ${{ matrix.os == 'ubuntu-latest' && inputs.build-artifacts == true }}
        run: rm -f './publish/linux-x64/libcoreclrtraceptprovider.so'

      - name: Upload website artifacts (linux-x64)
        if: ${{ matrix.os == 'ubuntu-latest' && inputs.build-artifacts == true }}
        uses: actions/upload-artifact@v4
        with:
          name: service-x86_64-unknown-linux-gnu
          path: ./src/service/publish/linux-x64
          if-no-files-found: error
        